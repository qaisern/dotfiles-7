##############################################################################
# This is the ~/.bashrc file that I use, which evolved over a period of time.
# Feel free to use the entire file or parts of it.
# 
# Author: Sudar (http://sudarmuthu.com)
# Repo: https://github.com/sudar/dotfiles
#
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples
#
##############################################################################

# Path where additional files are present.
# This line will be replaced by the setup script.
additional_files="$HOME/Dropbox/code/dotfiles"

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# If there is a machine specific file then load it.
if [ -f ~/.bash_specific ]; then
    . ~/.bash_specific
fi

# Load machine specific bash files
if [ "$TERM_PROGRAM" == "Apple_Terminal" -a -f $additional_files/specific/bash_specific_mac ]; then
    # if mac
    . $additional_files/specific/bash_specific_mac
else
    if [ -f $additional_files/specific/bash_specific_ubuntu ]; then
        . $additional_files/specific/bash_specific_ubuntu
    fi
fi

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# set the command line mode to vi mode. Use vi command editing everywhere :) who need to use arrow keys anymore ;)
set -o vi

#-----------------------------------------------------------------------------------
# Prompt and color settings
#-----------------------------------------------------------------------------------
# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# force colored prompt, if the terminal has the capability;
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes -a -f $additional_files/bash/bash_gitprompt ]; then
    . $additional_files/bash/bash_gitprompt
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

#-----------------------------------------------------------------------------------
# Load additional files
#-----------------------------------------------------------------------------------
# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

# Git command completion
if [ -f $additional_files/git/git-contrib/completion/git-completion.bash ]; then
    . $additional_files/git/git-contrib/completion/git-completion.bash
fi

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f $additional_files/bash/bash_aliases ]; then
    . $additional_files/bash/bash_aliases
fi

# HDFS Alias
if [ -f $additional_files/bash/hdfs_aliases ]; then
    . $additional_files/bash/hdfs_aliases
fi

# bash history settings
if [ -f $additional_files/bash/bash_history_options ]; then
    . $additional_files/bash/bash_history_options
fi
