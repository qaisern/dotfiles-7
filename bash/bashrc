##############################################################################
# This is the ~/.bashrc file that I use, which evolved over a period of time.
# Feel free to use the entire file or parts of it.
# 
# Author: Sudar (http://sudarmuthu.com)
# Repo: https://github.com/sudar/dotfiles
#
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples
#

##############################################################################

# Path where additional files are present.
# This line will be replaced by the setup script.
additional_files="$HOME/Dropbox/code/dotfiles"

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# Color code definitions
        RED="\[\033[0;31m\]"
     YELLOW="\[\033[0;33m\]"
      GREEN="\[\033[0;32m\]"
       BLUE="\[\033[0;34m\]"
  LIGHT_RED="\[\033[1;31m\]"
LIGHT_GREEN="\[\033[1;32m\]"
      WHITE="\[\033[1;37m\]"
 LIGHT_GRAY="\[\033[0;37m\]"
 COLOR_NONE="\[\e[m\]"
     PURPLE="\[\033[1;35m\]"

# If there is a machine specific file then load it.
if [ -f ~/.bash_specific ]; then
    . ~/.bash_specific
fi

# Load machine specific bash files. This is very specific to my setup
if [ "$TERM_PROGRAM" == "Apple_Terminal" -a -f $additional_files/specific/bash_specific_mac ]; then
    # if mac
    . $additional_files/specific/bash_specific_mac
else
    if [ -f $additional_files/specific/bash_specific_ubuntu ]; then
        . $additional_files/specific/bash_specific_ubuntu
    fi
fi

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

#-----------------------------------------------------------------------------------
# Load additional files
#-----------------------------------------------------------------------------------
# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

# Git command completion
if [ -f $additional_files/git/git-contrib/completion/git-completion.bash ]; then
    . $additional_files/git/git-contrib/completion/git-completion.bash
fi

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f $additional_files/bash/bash_aliases ]; then
    . $additional_files/bash/bash_aliases
fi

# HDFS Alias
if [ "$GRID" == "Y" -a -f $additional_files/bash/hdfs_aliases ]; then
    . $additional_files/bash/hdfs_aliases
fi

# bash history settings
if [ -f $additional_files/bash/bash_history_options ]; then
    . $additional_files/bash/bash_history_options
fi

# Commands to customize programs that use Readline
# http://www.gnu.org/software/bash/manual/html_node/Readline-Init-File.html
if [ -f $additional_files/bash/inputrc ]; then
    export INPUTRC=$additional_files/bash/inputrc
fi

#-----------------------------------------------------------------------------------
# Prompt and color settings
#-----------------------------------------------------------------------------------

if [[ -z ${HOST_COLOR} ]]  # If host color is not set, then use BLUE
then
    HOST_COLOR="$BLUE"
fi

if [[ $USER == sudar* ]]  # you might have to customize the username in your case
then
    #The lowercase w is the full current working directory and W is last part of current directory
    PS1_PRE="${HOST_COLOR}\h${WHITE}:${RED}\w${COLOR_NONE}"
else
    PS1_PRE="${GREEN}\u${WHITE}@${HOST_COLOR}\h${WHITE}:${RED}\w${COLOR_NONE}"
fi

if [ -f $additional_files/git/git-contrib/completion/git-prompt.sh ]; then

    # Configure options for git prompt. Check full options at
    # https://github.com/git/git/blob/master/contrib/completion/git-prompt.sh
    export GIT_PS1_SHOWDIRTYSTATE=Y
    export GIT_PS1_SHOWSTASHSTATE=Y
    export GIT_PS1_SHOWUNTRACKEDFILES=Y
    export GIT_PS1_SHOWUPSTREAM="auto"
    export GIT_PS1_SHOWCOLORHINTS=Y

    . $additional_files/git/git-contrib/completion/git-prompt.sh

    GIT_PROMPT="Y"

fi

PS1_POST="\\\$ "

if [ "$GIT_PROMPT" == "Y" ]; then
    # Configure prompt
    PROMPT_COMMAND='__git_ps1 "$PS1_PRE" "$PS1_POST"'
else
    PS1="${PS1_PRE}${PS1_POST} "
fi

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac
