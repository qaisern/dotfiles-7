set nocompatible               " be iMproved
filetype off                   " required!

" Vundle configurations.
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" required! 
Bundle 'gmarik/vundle'

" original repos on github
" ---------------------------------------------------------------------------
" Git wrapper for vim. Who needs git bash any more ;)
Bundle 'tpope/vim-fugitive'

" Navigate the document like a pro. Who needs a mouse any more ;)
Bundle 'Lokaltog/vim-easymotion'

" Opens a toolbar with method and class indexes
Bundle 'majutsushi/tagbar.git' 
" Enable Tags bar in the side
nmap <F8> :TagbarToggle<CR>

" Syntax Highlighter
Bundle 'scrooloose/syntastic.git'
let g:syntastic_check_on_open=1 " Enable syntax check when a file is opened or saved
nmap <F6> :SyntasticToggleMode<CR> " Toggle Syntax highlight

" Zen Coding. Expands HTML abbreviations. Need to decide between one of these
Bundle 'mattn/zencoding-vim.git' 
let g:use_zen_complete_tag = 1 " for tag auto complete.
" Similar to Zen coding. But uses <c-e> as shortcut
Bundle 'rstacruz/sparkup', {'rtp': 'vim/'}

" Automatically close tags, quotes etc
Bundle 'Raimondi/delimitMate'

" Show diff of the current file from scms. Who needs Tortoise svn any more ;)
Bundle 'sudar/vim-scmdiff.git'

" Snippet manager
Bundle 'msanders/snipmate.vim'

" vim-scripts repos
" ---------------------------------------------------------------------------
" Makes searching easier
Bundle 'L9'
Bundle 'FuzzyFinder'

" Has a smart status line
Bundle 'SmartusLine' 

" Automatically highlight HTML tags 
Bundle 'MatchTag'

" HTML Source explorer
Bundle 'html-source-explorer'

" Tag generation and syntax highlights
Bundle 'easytags.vim'

" Bulk Comments. 
Bundle 'comments.vim'

" non github repos
" ---------------------------------------------------------------------------
" Shows the list of files in the current directory. Who needs. Textmate any more ;)
" Make sure you have ruby mappings enabled in Vim and compile the C extension
" after installing this Plugin
Bundle 'git://git.wincent.com/command-t.git'
" Command T mappings. Who needs Textmate anymore ;)
nnoremap <silent> <Leader>t :CommandT<CR>
nnoremap <silent> <Leader>b :CommandTBuffer<CR>

" Color Schemes
" ---------------------------------------------------------------------------

" Color Schemes explorer. Browse through the different color schmes
Bundle 'Color-Scheme-Explorer'

" Programmer Color scheme
Bundle 'pw' 

" Light ColorScheme
Bundle 'lightdiff'

" 256 color schemes
Bundle 'Eddie.vim'
Bundle 'desert256.vim'
Bundle 'ciaranm/inkpot'
Bundle '256-grayvim'

" Set the default color scheme
colorscheme desert256

" color schemes
if &t_Co >= 256 || has("gui_running")
   colorscheme desert 
endif

" Show diff of changes that have been made after the file has been opened
if !exists(":DiffOrig")
	command DiffOrig vert new | set bt=nofile | r # | 0d_ | diffthis
             \ | wincmd p | diffthis
endif


" Common settings
set hidden

set nowrap        " don't wrap lines
set tabstop=4     " a tab is four spaces
set backspace=indent,eol,start
                  " allow backspacing over everything in insert mode
set autoindent    " always set auto indenting on
set copyindent    " copy the previous indentation on autoindenting
set number        " always show line numbers
set shiftwidth=4  " number of spaces to use for autoindenting
set shiftround    " use multiple of shiftwidth when indenting with '<' and '>'
set showmatch     " set show matching parenthesis
set ignorecase    " ignore case when searching
set smartcase     " ignore case if search pattern is all lowercase,
                  "    case-sensitive otherwise
set smarttab      " insert tabs on the start of a line according to
                  "    shiftwidth, not tabstop
set hlsearch      " highlight search terms
set incsearch     " show search matches as you type

set history=1000         " remember more commands and search history
set undolevels=1000      " use many muchos levels of undo
set wildignore=*.swp,*.bak,*.pyc,*.class
set title                " change the terminal's title
set visualbell           " don't beep
set noerrorbells         " don't beep

set nobackup
set noswapfile

" Highlight current line and column
au WinLeave * set nocursorline " nocursorcolumn
au WinEnter * set cursorline " cursorcolumn
set cursorline " cursorcolumn


" Key mappings
" ------------
"  
" Paste without messing up formatting.
set pastetoggle=<F2>

" change the mapleader from \ to ,
let mapleader=","

" Quickly edit/reload the vimrc file
nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>

" Mapping for tabs
nmap <silent> <Leader>h :tabp<CR>
nmap <silent> <Leader>l :tabn<CR>
nmap <leader>1 1gt
nmap <leader>2 2gt
nmap <leader>3 3gt
nmap <leader>4 4gt
nmap <leader>5 5gt
nmap <leader>6 6gt
nmap <leader>7 7gt
nmap <leader>8 8gt
nmap <leader>9 9gt
nmap <leader>0 10gt

" Escape insert mode without pressing esc
:imap jj <Esc>

" File type specific settings
filetype plugin indent on
autocmd filetype python set expandtab

if &t_Co > 2 || has("gui_running")
   	" switch syntax highlighting on, when the terminal has colors
    syntax on
endif
